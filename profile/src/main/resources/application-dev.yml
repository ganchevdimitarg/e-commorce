server:
  port: 8083

spring:
  #Data Source Properties
  data:
    mongodb:
      authentication-database: admin
      username: ${MONGO_DB_USER}
      password: ${MONGO_DB_PASSWORD}
      database: authentication
      port: 27017
      host: localhost
      auto-index-creation: true

  #Security
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8082
          jwk-set-uri: http://localhost:8082/oauth2/jwks

  #Pagination
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  #Zipkin
  zipkin:
    base-url: http://localhost:9411

#Logging Levels
#Disable the default loggers
logging:
  level:
    blog: WARN
    root: INFO
    org:
      springframework:
        data: INFO
        web: INFO
        security: INFO
        oauth2: INFO

#Eureka
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

#Prometheus (and other data loggers)
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true

#Spring Doc
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    disable-swagger-default-url: true
    oauth2RedirectUrl: http://127.0.0.1:8081/login/oauth2/code/gateway-client-oidc
    oauth:
      client-id: gateway
      client-secret: secret
      scopes:
        - openid
        - profile.read
        - profile.write
      use-pkce-with-authorization-code-grant: true
  oAuthFlow:
    authorizationUrl: http://localhost:8082/oauth2/authorize
    tokenUrl: http://localhost:8082/oauth2/token

#Kafka
kafka:
  bootstrapAddress: localhost:9092

#JWT secret key
jwt:
  secret:
    key: ${PASSWORD_RESET_TOKEN_SECRET_KEY}
