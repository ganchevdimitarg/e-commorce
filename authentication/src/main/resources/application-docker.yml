server:
  port: 8082

spring:
  application:
    name: auth-service
  devtools:
    livereload:
      port: 35730
  cloud:
    vault:
      authentication: TOKEN
      token: ${VAULT_SERVER_TOKEN}
      uri: http://localhost:8200
      application-name: auth-service/docker
      kv:
        backend: secret
        enabled: true
        default-context: auth-service/docker

    compatibility-verifier:
      enabled: false

  config:
    import: optional:vault://

  #Data Source Properties
  data:
    mongodb:
      authentication-database: admin
      username: ${MONGO_DB_USER}
      password: ${MONGO_DB_PASSWORD}
      database: authentication
      port: 27017
      host: mongodb

  #Data Source Properties
  datasource:
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    url: jdbc:postgresql://postgres:5432/registered_clients

  #JPA Properties
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true

  #Zipkin
  zipkin:
    base-url: http://zipkin:9411

  #Kafka
  kafka:
    bootstrap-servers: http://kafka:9092

#Logging Levels
#Disable the default loggers
logging:
  level:
    blog: WARN
    root: INFO
    org:
      springframework:
        web: INFO
        security: INFO
        oauth2: INFO
      hibernate:
        SQL: off
        type:
          descriptor: off
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

#Eureka
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
#    enabled: false

#Prometheus (and other data loggers)
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true

keyManager:
  algorithm: "RSA"
  keySize: 2048