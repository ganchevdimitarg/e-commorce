# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
# - "first_rules.yml"
# - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: [ 'host.docker.internal:9090' ] # Only works on Docker Desktop for Windows

  - job_name: 'cadvisor'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ['host.docker.internal:8080']

  - job_name: 'node-exporter'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ['host.docker.internal:9100']

  - job_name: 'kafka'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 10s

    static_configs:
      - targets: ['10.0.75.1:7071']

  - job_name: 'microservice-authentication'
    scrape_interval: 2s
    metrics_path: '/actuator/prometheus' ##prometheus endpoint
    static_configs:
      - targets: [ 'host.docker.internal:8082' ] ## host and port for your mis
    basic_auth:
      username: "admin"
      password: "admin"

  - job_name: 'microservice-category'
    scrape_interval: 2s
    metrics_path: '/actuator/prometheus'
    static_configs:
      - targets: [ 'host.docker.internal:8081' ]